plot_slopegraph(df) + labs(title="Estimates of % survival rates") +
theme(axis.title=element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust=0.5,
family = "American Typewriter",
face="bold"),
axis.text = element_text(family = "American Typewriter",
face="bold"))
kkmusic= songcol %>% mutate(music_director= str_replace_all(music_director," ","")) %>%
mutate(singer= str_replace_all(singer," ","")) %>%
select(music_director,rank,year,singer) %>%
filter(year>1953,year<1970) %>%  # can select year here
unnest_tokens(word,music_director) %>%
#filter(word%in%toplyrics) %>%
# group_by(year) %>%
#count(word) %>%
#arrange(desc(n)) %>%
#arrange(year) %>%
rename(music_director=word) %>%
unnest_tokens(word,singer) %>%
rename(singer=word) %>%
filter(singer=="mohammedrafi") %>%  # can select singer here
group_by(music_director) %>%
count(music_director) %>%
arrange(desc(n)) %>%
head(10) %>%
select(music_director)
View(kkmusic)
ource_df = songcol %>% mutate(music_director= str_replace_all(music_director," ","")) %>% select(music_director,singer,rank,year) %>% unnest_tokens(word,music_director)%>%
rename(music_director=word) %>%
unnest_tokens(word,singer) %>%
rename(singer=word) %>%
filter(singer=="mohammedrafi") %>%
filter(music_director %in% kkmusic$music_director) %>%
group_by(year) %>% count(music_director) %>% arrange(desc(n)) %>% arrange(year) %>%
filter(year>1953,year<1970)
df <- tufte_sort(source_df,
x="year",
y="n",
group="music_director",
method="tufte",
min.space=0.05)
df <- transform(df,
x=factor(x),
y=round(y))
## Plot
plot_slopegraph(df) + labs(title="Estimates of % survival rates") +
theme(axis.title=element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust=0.5,
family = "American Typewriter",
face="bold"),
axis.text = element_text(family = "American Typewriter",
face="bold"))
source_df = songcol %>% mutate(music_director= str_replace_all(music_director," ","")) %>% select(music_director,singer,rank,year) %>% unnest_tokens(word,music_director)%>%
rename(music_director=word) %>%
unnest_tokens(word,singer) %>%
rename(singer=word) %>%
filter(singer=="mohammedrafi") %>%
filter(music_director %in% kkmusic$music_director) %>%
group_by(year) %>% count(music_director) %>% arrange(desc(n)) %>% arrange(year) %>%
filter(year>1953,year<1970)
df <- tufte_sort(source_df,
x="year",
y="n",
group="music_director",
method="tufte",
min.space=0.05)
df <- transform(df,
x=factor(x),
y=round(y))
## Plot
plot_slopegraph(df) + labs(title="Estimates of % survival rates") +
theme(axis.title=element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust=0.5,
family = "American Typewriter",
face="bold"),
axis.text = element_text(family = "American Typewriter",
face="bold"))
songcol %>% mutate(music_director= str_replace_all(music_director," ","")) %>%
mutate(singer= str_replace_all(singer," ","")) %>%
select(music_director,rank,year,singer) %>%
filter(year>1953,year<1970) %>%  # can select year here
unnest_tokens(word,music_director) %>%
#filter(word%in%toplyrics) %>%
# group_by(year) %>%
#count(word) %>%
#arrange(desc(n)) %>%
#arrange(year) %>%
rename(music_director=word) %>%
unnest_tokens(word,singer) %>%
rename(singer=word)
network=songcol %>% mutate(music_director= str_replace_all(music_director," ","")) %>%
mutate(singer= str_replace_all(singer," ","")) %>%
select(music_director,rank,year,singer) %>%
filter(year>1953,year<1970) %>%  # can select year here
unnest_tokens(word,music_director) %>%
#filter(word%in%toplyrics) %>%
# group_by(year) %>%
#count(word) %>%
#arrange(desc(n)) %>%
#arrange(year) %>%
rename(music_director=word) %>%
unnest_tokens(word,singer) %>%
rename(singer=word)
distinct(network$music_director)
?distinct
unique(network$music_director)
unique(network$singer)
network%>%
distinct(music_director)
sources <- network%>%
distinct(music_director) %>%
rename(label = music_director)
destinations <- network %>%
distinct(singer) %>%
rename(label = singer)
node_list = full_join(sources,destinations)
View(node_list)
nodes <- add_column(nodes, id = 1:nrow(nodes)) %>%
select(id, everything())
nodes <- add_column(node_list, id = 1:nrow(node_list)) %>%
select(id, everything())
View(nodes)
per_route <- network %>%
group_by(music_director, singer) %>%
summarise(weight = n()) %>%
ungroup()
per_route
View(nodes)
edges <- per_route %>%
left_join(nodes, by = c("music_director" = "label")) %>%
rename(from = id)
View(edges)
edges <- edges %>%
left_join(nodes, by = c("singer" = "label")) %>%
rename(to = id)
View(edges)
edges <- select(edges, from, to, weight)
edges
library(tidygraph)
library(ggraph)
library(tidygraph)
library(ggraph)
routes_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = TRUE)
class(routes_tidy)
routes_tidy
routes_tidy %>%
activate(edges) %>%
arrange(desc(weight))
ggraph(routes_tidy) + geom_edge_link() + geom_node_point() + theme_graph()
ggraph(routes_tidy, layout = "graphopt") +
geom_node_point() +
geom_edge_link(aes(width = weight), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE) +
labs(edge_width = "Letters") +
theme_graph()
routes_tidy %>%
activate(edges) %>%
arrange(desc(weight))
View(edges)
edges %>% arrange(weight)
edges %>% arrange(desc(weight)
)
edges %>% filter(weight>5)
edges1=edges %>% filter(weight>5)
routes_tidy1 <- tbl_graph(nodes = nodes, edges = edges1, directed = TRUE)
routes_tidy1 %>%
activate(edges1) %>%
arrange(desc(weight))
routes_tidy1 %>%
activate(edges) %>%
arrange(desc(weight))
ggraph(routes_tidy1) + geom_edge_link() + geom_node_point() + theme_graph()
ggraph(routes_tidy, layout = "graphopt") +
geom_node_point() +
geom_edge_link(aes(width = weight), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE) +
labs(edge_width = "Letters") +
theme_graph()
View(edges1)
edges %>% count(from)
edges %>% count(from) %>% View()
edges %>% count(to) %>% View()
routes_igraph <- graph_from_data_frame(d = edges, vertices = nodes, directed = TRUE)
library(igraph)
routes_igraph <- graph_from_data_frame(d = edges, vertices = nodes, directed = TRUE)
plot(routes_igraph, edge.arrow.size = 0.2)
plot(routes_igraph, layout = layout_with_graphopt, edge.arrow.size = 0.2)
set.seed(123)
routes_tidy %>%
activate(nodes) %>%
mutate(centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(width = 1, colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
routes_tidy %>%
activate(nodes) %>%
mutate(community = as.factor(group_infomap())) %>%
ggraph(layout = "graphopt") +
geom_edge_link(width = 1, colour = "lightgray") +
geom_node_point(aes(colour = community), size = 4) +
geom_node_text(aes(label = label), repel = TRUE)+
theme_graph()
routes_tidy1 %>%
activate(nodes) %>%
mutate(community = as.factor(group_infomap())) %>%
ggraph(layout = "graphopt") +
geom_edge_link(width = 1, colour = "lightgray") +
geom_node_point(aes(colour = community), size = 4) +
geom_node_text(aes(label = label), repel = TRUE)+
theme_graph()
edges1
edges1 %>% select(from,to) %>% gather()
edges1 %>% select(from,to)
edges1 %>% select(from,to) %>% gather(key="node",value="value")
nodes
edges1 %>% select(from,to) %>% gather(key="link",value="id")
edges1 %>% select(from,to) %>% gather(key="link",value="id") %>% View()
edges1 %>% select(from,to) %>% gather(key="link",value="id") %>% distinct(id)
edges1 %>% select(from,to) %>% gather(key="link",value="id") %>% distinct(id) %>% left_join(nodes)
nodes1=edges %>%
filter(weight>5) %>%  # select only greater than five collaboration
select(from,to) %>%
gather(key="link",value="id") %>%
distinct(id) %>%
left_join(nodes) # select only nodes with greater than 5
routes_tidy1 <- tbl_graph(nodes = nodes1, edges = edges1, directed = TRUE)
View(edges1)
View(nodes1)
nodes1=edges %>%
filter(weight>5) %>%  # select only greater than five collaboration
select(from,to) %>%
gather(key="link",value="id") %>%
distinct(id) %>%
left_join(nodes)
routes_tidy1 <- tbl_graph(nodes = nodes1, edges = edges, directed = TRUE)
nodes1=edges %>%
filter(weight>4) %>%  # select only greater than five collaboration
select(from,to) %>%
gather(key="link",value="id") %>%
distinct(id) %>%
left_join(nodes)
routes_tidy1 <- tbl_graph(nodes = nodes1, edges = edges1, directed = TRUE)
routes_tidy1 <- tbl_graph(nodes = nodes1, edges = edges1, directed = FALSE)
routes_tidy1 <- tbl_graph(nodes = nodes, edges = edges1, directed = TRUE)
edges1
sgdf.copy <- delete.edges(routes_igraph, which(E(routes_igraph)$weight != 3)-1)
sgdf.copy <- delete.edges(routes_igraph, which(E(routes_igraph)$weight != 3))
plot(sgdf.copy)
plot(sgdf.copy, layout = layout_with_graphopt, edge.arrow.size = 0.2)
plot(routes_igraph, edge.arrow.size = 0.2)
sgdf.copy <- delete.edges(routes_igraph, which(E(routes_igraph)$weight <3))
plot(sgdf.copy)
plot(sgdf.copy, layout = layout_with_graphopt, edge.arrow.size = 0.2)
s1 <- subgraph.edges(routes_igraph, E(routes_igraph)[E(routes_igraph)$weight>2], del=F)
plot(s1, layout=coords, edge.width = E(s1)$weight)
plot(s1, edge.width = E(s1)$weight)
s2 <- delete_vertices(s1, degree(s1, mode = "in")==0)
plot(s2, layout=coords[V(g)$name%in%V(s2)$name,], edge.width = E(s2)$weight)
plot(s1, layout = layout_with_graphopt,edge.width = E(s1)$weight)
s2 <- delete_vertices(s1, degree(s1, mode = "in")==0)
plot(s2, layout=coords[V(routes_igraph)$name%in%V(s2)$name,], edge.width = E(s2)$weight)
coords <- layout.auto(routes_igraph)
plot(s2, layout=coords[V(routes_igraph)$name%in%V(s2)$name,], edge.width = E(s2)$weight)
s1 <- subgraph.edges(routes_igraph, E(routes_igraph)[E(routes_igraph)$weight>2], del=F)
plot(s1, layout = coords,edge.width = E(s1)$weight)
s2 <- delete_vertices(s1, degree(s1, mode = "in")==0)
plot(s2, layout=coords[V(routes_igraph)$name%in%V(s2)$name,], edge.width = E(s2)$weight)
plot(routes_igraph, layout = layout_with_graphopt, edge.arrow.size = 0.2)
View(nodes1)
subgraph(routes_igraph,nodes1$id)
ig= induced_subgraph(routes_igraph, nodes1$id, impl = "auto")
plot(ig, layout = layout_with_graphopt, edge.arrow.size = 0.2)
routes_igraph_tidy <- as_tbl_graph(ig)
routes_igraph_tidy
ggraph(routes_igraph_tidy, layout = "graphopt") +
geom_node_point() +
geom_edge_link(aes(width = weight), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE) +
labs(edge_width = "Letters") +
theme_graph()
routes_igraph_tidy %>%
activate(nodes) %>%
mutate(centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(width = 1, colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
routes_igraph_tidy %>%
activate(nodes) %>%
mutate(community = as.factor(group_infomap())) %>%
ggraph(layout = "graphopt") +
geom_edge_link(width = 1, colour = "lightgray") +
geom_node_point(aes(colour = community), size = 4) +
geom_node_text(aes(label = label), repel = TRUE)+
theme_graph()
nodes1=edges %>%
filter(weight>2) %>%  # select only greater than 4 collaboration
select(from,to) %>%
gather(key="link",value="id") %>%
distinct(id) %>%
left_join(nodes) # select only nodes with greater than 5
subgraph(routes_igraph,nodes1$id)
ig= induced_subgraph(routes_igraph, nodes1$id, impl = "auto")
plot(ig, layout = layout_with_graphopt, edge.arrow.size = 0.2)
# using tidygraph
routes_igraph_tidy <- as_tbl_graph(ig) # converting the subgraph to tidy
routes_igraph_tidy
ggraph(routes_igraph_tidy, layout = "graphopt") +
geom_node_point() +
geom_edge_link(aes(width = weight), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE) +
labs(edge_width = "Letters") +
theme_graph()
# clusters
set.seed(123)
routes_igraph_tidy %>%
activate(nodes) %>%
mutate(community = as.factor(group_infomap())) %>%
ggraph(layout = "graphopt") +
geom_edge_link(width = 1, colour = "lightgray") +
geom_node_point(aes(colour = community), size = 4) +
geom_node_text(aes(label = label), repel = TRUE)+
theme_graph()
routes_tidy %>%
activate(nodes) %>%
mutate(centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(width = 1, colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
nodes1=edges %>%
filter(weight>4) %>%  # select only greater than 4 collaboration
select(from,to) %>%
gather(key="link",value="id") %>%
distinct(id) %>%
left_join(nodes) # select only nodes with greater than 5
subgraph(routes_igraph,nodes1$id)
ig= induced_subgraph(routes_igraph, nodes1$id, impl = "auto")
plot(ig, layout = layout_with_graphopt, edge.arrow.size = 0.2)
# using tidygraph
routes_igraph_tidy <- as_tbl_graph(ig) # converting the subgraph to tidy
routes_igraph_tidy
ggraph(routes_igraph_tidy, layout = "graphopt") +
geom_node_point() +
geom_edge_link(aes(width = weight), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE) +
labs(edge_width = "Letters") +
theme_graph()
set.seed(123)
# centrality
routes_igraph_tidy %>%
activate(nodes) %>%
mutate(centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(width = 1, colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
# clusters
set.seed(123)
routes_igraph_tidy %>%
activate(nodes) %>%
mutate(community = as.factor(group_infomap())) %>%
ggraph(layout = "graphopt") +
geom_edge_link(width = 1, colour = "lightgray") +
geom_node_point(aes(colour = community), size = 4) +
geom_node_text(aes(label = label), repel = TRUE)+
theme_graph()
routes_igraph_tidy %>%
activate(nodes) %>%
mutate(centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), alpha = 0.8) +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
routes_igraph_tidy %>%
activate(nodes) %>%
mutate(centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
set.seed(123)
routes_igraph_tidy %>%
activate(nodes) %>%
mutate(community = as.factor(group_infomap())) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(colour = community), size = 4) +
geom_node_text(aes(label = label), repel = TRUE)+
theme_graph()
set.seed(123)
routes_igraph_tidy %>%
activate(nodes) %>%
mutate(centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
routes_igraph_tidy %>%
activate(nodes) %>%
mutate(centrality = centrality_edge_betweenness()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
routes_igraph_tidy %>%
activate(nodes) %>%
activate(edges) %>%
mutate(centrality = centrality_edge_betweenness()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
routes_igraph_tidy %>%
activate(nodes) %>%
activate(edges) %>%
mutate(centrality = centrality_edge_betweenness())
routes_igraph_tidy %>%
activate(nodes) %>%
activate(edges) %>%
mutate(centrality = centrality_edge_betweenness()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality))
routes_igraph_tidy %>%
activate(nodes) %>%
#activate(edges) %>%
mutate(centrality = centrality_eigen()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
routes_igraph_tidy %>%
activate(nodes) %>%
#activate(edges) %>%
mutate(centrality = centrality_pagerank()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
?centrality_edge_betweenness()
routes_igraph_tidy %>%
# activate(nodes) %>%
activate(edges) %>%
mutate(centrality = centrality_edge_betweenness()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
routes_igraph_tidy %>%
activate(nodes) %>%
activate(edges) %>%
mutate(centrality = centrality_edge_betweenness()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
routes_igraph_tidy %>%
activate(nodes) %>%
activate(edges) %>%
mutate(centrality = centrality_pagerank()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
routes_igraph_tidy %>%
activate(nodes) %>%
# activate(edges) %>%
mutate(centrality = centrality_pagerank()) %>%
ggraph(layout = "graphopt") +
geom_edge_link(aes(width = weight), colour = "lightgray") +
geom_node_point(aes(size = centrality, colour = centrality)) +
geom_node_text(aes(label = label), repel = TRUE)+
scale_color_gradient(low = "yellow", high = "red")+
theme_graph()
